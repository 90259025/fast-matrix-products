include("src/functions.jl")

test_MP = true 
test_δ = true
test_Δ = true
test_lagrange = true

# test_MP = false 
# test_δ = false
# test_Δ = false
# test_lagrange = false

if test_MP
    # test MP with a bunch of randomly generated inputs

    # -t^3 + 38*t^2 + 6*t + 4
    A = [4, 6, 38, -1]
    # 7*t^7 + 26*t^6 + 9*t^5 + 8*t^4 + 4*t^3 + 3*t^2 + 2*t + 1)
    B = [1, 2, 3, 4, 8, 9, 26, 7]
    # -7*t^10 + 240*t^9 + 1021*t^8 + 518*t^7 + 458*t^6 + 233*t^5 + 168*t^4 + 109*t^3 + 62*t^2 + 14*t + 4
    println(MP(A,B)==[109, 168, 233, 458])

    A = [-9, -7, -7]
    B = [-5, -3, 2, -8, -9, 9]
    println(MP(A,B)==[38, 79, 123])

    A = [3, 1, -2, 10, 4, 10, 0, 3, -6, -5, 9, -4, -3, -4, -8, 1, -7, -2, -5, -5, 0, 2, 4, -2, -1, 8, 6, 8, 8, 6, 2] 
    B = [-4, 9, 7, -5, -5, 3, 10, 7, -7, -6, 5, -4, -7, 9, -2, 7, 4, 9, 5, 2, 7, -7, -1, 9, -7, 1, -4, 2, -7, -7, 9, -1, 6, 2, 8, 1, -1, 6, -8, 7, -3, 1, 9, 7, 9, 0, 3, -5, -9, -4, -5, -2, -9, 2, -1, 2, -4, 9, 4, -4, -5, 2]
    println(MP(A,B)==[138, -321, -82, 10, -188, 248, -199, 168, 12, -48, 329, -64, 391, 73, 343, 290, 89, 328, -74, 141, -248, -251, -100, -399, -100, -340, -97, -151, -53, 62, 107])

    A = [1, 2, 10, -9, 7, -9, -2, -9, -5, 3, 5, -4, 9, 0, 3, -7, 5, 6, -7, -4, 1, -9, 4, 10, 10, 2, -5, 1, 6, -1, 6, 7, 10, -9, 10, -9, -1, -9, -5, 1, -5, -4, 0, 9, 10, 3, 2, 10, -6, 10, 4, 7, -5, -7, -4, 5, -3, 3, -4, 7, 1, 9, 3, -6]
    B = [7, -9, 10, -4, 2, 9, 2, 1, 1, 10, -1, -3, 10, -4, 9, 3, -8, 5, -4, 3, -5, 9, 9, 0, -9, 8, -7, -4, 4, -3, 2, -6, 3, -8, 8, 7, -6, 9, 9, -2, -1, 1, 1, -7, 9, -3, 2, 6, -3, -7, -6, -5, -7, -9, -8, 6, -9, -6, 9, -7, -5, 6, -4, 2, 2, 7, 7, -5, -8, 9, 2, 5, 5, -3, 8, -7, -1, -9, 8, -7, -4, 5, -5, -8, -6, -7, -2, 8, -2, -6, 5, 4, 8, -6, 0, 2, -2, -5, -7, 0, -5, 5, 7, -4, -5, 6, 10, 2, -8, -7, 8, 0, -3, 5, 0, -8, -2, 4, 1, -7, -2, 9, 7, -7, -7, -3, 7, 6]
    println(MP(A,B)==[-243, 556, -149, 334, 32, 273, 200, -85, 249, -13, -334, -16, -269, -172, -622, 394, -454, -12, -18, 130, 65, -290, -136, 155, 18, 156, 601, 9, 113, -74, 125, 296, -163, 78, 4, -273, -355, -414, 38, -192, 103, 217, 54, -67, -486, 151, -381, -76, -538, 181, -391, 93, 411, 104, -117, 112, 222, -14, -83, 258, 179, -119, -78, -44])

    A = [-7//10, 1, -2] 
    B = [9//4, -1//4, -2//5, 9//8, -4//9, -1//2]
    println(MP(A,B) == [-447//100, -11//16, 161//72])
end

if test_δ
    # Test delta
    println(compute_δ(5) == [-1//120, 1//24, -1//12, 1//12, -1//24, 1//120])
    println(compute_δ(30)==[1//265252859812191058636308480000000, -1//8841761993739701954543616000000, 1//609776689223427721003008000000, -1//65333216702510112964608000000, 1//9678995067038535254016000000, -1//1861345205199718318080000000, 1//446722849247932396339200000, -1//130294164363980282265600000, 1//45319709343993141657600000, -1//18539881095269921587200000, 1//8828514807271391232000000, -1//4855683143999265177600000, 1//3066747248841641164800000, -1//2214873013052296396800000, 1//1824013069572479385600000, -1//1710012252724199424000000, 1//1824013069572479385600000, -1//2214873013052296396800000, 1//3066747248841641164800000, -1//4855683143999265177600000, 1//8828514807271391232000000, -1//18539881095269921587200000, 1//45319709343993141657600000, -1//130294164363980282265600000, 1//446722849247932396339200000, -1//1861345205199718318080000000, 1//9678995067038535254016000000, -1//65333216702510112964608000000, 1//609776689223427721003008000000, -1//8841761993739701954543616000000, 1//265252859812191058636308480000000])
end

if test_Δ
    println(compute_Δ(5,3)==[120, 360, 840, 1680])
    # This overflows, TODO fix
    println(compute_Δ(50,30)==BigInt.([250023166568122405335142878324631535616000000000, 637559074748712133604614339727810415820800000000, 1578717708901572902259045031706959124889600000000, 3803274480535607446351335758203128800870400000000, 8929427041257513134911831780129085010739200000000, 20463270302881800934172947829462486482944000000000, 45837725478455234092547403137995969721794560000000, 100490398164305705510584691494837318236241920000000, 215868262723323367393107855803724609544519680000000, 454865267881288524149762981872133998683095040000000, 941100554237148670654682031459587583482265600000000, 1913571126948868963664520130634494753080606720000000, 3827142253897737927329040261268989506161213440000000, 7534686312361171544429048014373323090254888960000000, 14612724969427726631619971906663414478070087680000000, 27936091853317712678097005115680057090428108800000000, 52679487494827686764411495360996679084807290880000000, 98042379504262639255988060810743819407835791360000000, 180185994764590796470464544192718370803590103040000000, 327179832598862235696369830244672831195992555520000000, 587245853382573243557586874798130722659473817600000000, 1042361389754067507314716702766682032720566026240000000, 1830488294202264890894136648761002594045872046080000000, 3181562987542031834173142270465552127746396651520000000, 5475247932049078040204942511963973429144961679360000000, 9332808975083655750349333827211318345133457408000000000, 15762077380141285267256652685956893205114283622400000000, 26384346918932151425625266452580016886821735628800000000, 43786788503759740663803633687260453556853093171200000000, 72065756079104573175843480443616163145654049177600000000, 117658377272007466409540376234475368401067835392000000000]))
end

if test_lagrange
    # Test lagrange
    println(lagrange([1//1,2,3],8)==[9//1,10//1,11//1])
    println(lagrange([0//1, 127, 2186, 16383, 78124, 279935, 823542, 2097151],10)==[19487170//1,  35831807//1,  62748516//1,  105413503//1,  170859374//1,  268435455//1,  410338672//1,  612220031//1])
    # maybe this should test if it equals ints instead of rationals
    println(lagrange([1,8,27,64],4)==[125//1, 216//1, 343//1, 512//1])
    println(lagrange([1//4, -7//4, -31//4],3)==[-71//4, -127//4, -199//4])
    println(lagrange([-7//2, -797//360, -179947//90, -8894831//120, -85280963//90, -493110857//72, -1036653841//30, -48973005053//360, -40185312907//90, -51009804373//40], 10) == [-58738621183//18, -2750188672237//360, -498472099889//30, -12230002801613//360, -5930345300803//90, -2931007133459//24, -19579854846683//90, -134741703303133//360, -6243471811443//10, -364748503947917//360])

end