include("functions.jl")

test_MP = true 
test_δ = true
test_Δ = true
test_lagrange = true

if test_MP
    # test MP with a bunch of randomly generated inputs

    # -t^3 + 38*t^2 + 6*t + 4
    A = [4, 6, 38, -1]
    # 7*t^7 + 26*t^6 + 9*t^5 + 8*t^4 + 4*t^3 + 3*t^2 + 2*t + 1)
    B = [1, 2, 3, 4, 8, 9, 26, 7]
    # -7*t^10 + 240*t^9 + 1021*t^8 + 518*t^7 + 458*t^6 + 233*t^5 + 168*t^4 + 109*t^3 + 62*t^2 + 14*t + 4
    println(MP(A,B)==[109, 168, 233, 458])

    A = [-9, -7, -7]
    B = [-5, -3, 2, -8, -9, 9]
    println(MP(A,B)==[38, 79, 123])

    A = [3, 1, -2, 10, 4, 10, 0, 3, -6, -5, 9, -4, -3, -4, -8, 1, -7, -2, -5, -5, 0, 2, 4, -2, -1, 8, 6, 8, 8, 6, 2] 
    B = [-4, 9, 7, -5, -5, 3, 10, 7, -7, -6, 5, -4, -7, 9, -2, 7, 4, 9, 5, 2, 7, -7, -1, 9, -7, 1, -4, 2, -7, -7, 9, -1, 6, 2, 8, 1, -1, 6, -8, 7, -3, 1, 9, 7, 9, 0, 3, -5, -9, -4, -5, -2, -9, 2, -1, 2, -4, 9, 4, -4, -5, 2]
    println(MP(A,B)==[138, -321, -82, 10, -188, 248, -199, 168, 12, -48, 329, -64, 391, 73, 343, 290, 89, 328, -74, 141, -248, -251, -100, -399, -100, -340, -97, -151, -53, 62, 107])

    A = [1, 2, 10, -9, 7, -9, -2, -9, -5, 3, 5, -4, 9, 0, 3, -7, 5, 6, -7, -4, 1, -9, 4, 10, 10, 2, -5, 1, 6, -1, 6, 7, 10, -9, 10, -9, -1, -9, -5, 1, -5, -4, 0, 9, 10, 3, 2, 10, -6, 10, 4, 7, -5, -7, -4, 5, -3, 3, -4, 7, 1, 9, 3, -6]
    B = [7, -9, 10, -4, 2, 9, 2, 1, 1, 10, -1, -3, 10, -4, 9, 3, -8, 5, -4, 3, -5, 9, 9, 0, -9, 8, -7, -4, 4, -3, 2, -6, 3, -8, 8, 7, -6, 9, 9, -2, -1, 1, 1, -7, 9, -3, 2, 6, -3, -7, -6, -5, -7, -9, -8, 6, -9, -6, 9, -7, -5, 6, -4, 2, 2, 7, 7, -5, -8, 9, 2, 5, 5, -3, 8, -7, -1, -9, 8, -7, -4, 5, -5, -8, -6, -7, -2, 8, -2, -6, 5, 4, 8, -6, 0, 2, -2, -5, -7, 0, -5, 5, 7, -4, -5, 6, 10, 2, -8, -7, 8, 0, -3, 5, 0, -8, -2, 4, 1, -7, -2, 9, 7, -7, -7, -3, 7, 6]
    println(MP(A,B)==[-243, 556, -149, 334, 32, 273, 200, -85, 249, -13, -334, -16, -269, -172, -622, 394, -454, -12, -18, 130, 65, -290, -136, 155, 18, 156, 601, 9, 113, -74, 125, 296, -163, 78, 4, -273, -355, -414, 38, -192, 103, 217, 54, -67, -486, 151, -381, -76, -538, 181, -391, 93, 411, 104, -117, 112, 222, -14, -83, 258, 179, -119, -78, -44])

    A = [-7//10, 1, -2] 
    B = [9//4, -1//4, -2//5, 9//8, -4//9, -1//2]
    println(MP(A,B) == [-447//100, -11//16, 161//72])
end

if test_δ
    # Test delta
    println(compute_δ(5) == [-1//120, 1//24, -1//12, 1//12, -1//24, 1//120])
    println(compute_δ(30)==[1//265252859812191058636308480000000, -1//8841761993739701954543616000000, 1//609776689223427721003008000000, -1//65333216702510112964608000000, 1//9678995067038535254016000000, -1//1861345205199718318080000000, 1//446722849247932396339200000, -1//130294164363980282265600000, 1//45319709343993141657600000, -1//18539881095269921587200000, 1//8828514807271391232000000, -1//4855683143999265177600000, 1//3066747248841641164800000, -1//2214873013052296396800000, 1//1824013069572479385600000, -1//1710012252724199424000000, 1//1824013069572479385600000, -1//2214873013052296396800000, 1//3066747248841641164800000, -1//4855683143999265177600000, 1//8828514807271391232000000, -1//18539881095269921587200000, 1//45319709343993141657600000, -1//130294164363980282265600000, 1//446722849247932396339200000, -1//1861345205199718318080000000, 1//9678995067038535254016000000, -1//65333216702510112964608000000, 1//609776689223427721003008000000, -1//8841761993739701954543616000000, 1//265252859812191058636308480000000])
end

if test_Δ
    println(compute_Δ(5,3)==[120, 360, 840, 1680])
    # This overflows, TODO fix
    # println(compute_Δ(50,30)==[4750440164794325701367714688167999176704000000000, 12751181494974242672092286794556208316416000000000, 33153071886933030947439945665846141622681600000000, 83672038571783363819729386680468833619148800000000, 205376821948922802102972130942968955247001600000000, 491118487269163222420150747907099675590656000000000, 1145943136961380852313685078449899243044864000000000, 2612750352271948343275201978865770274142289920000000, 5828443093529730919613912106700564457702031360000000, 12736227500676078676193363492419751963126661120000000, 27291916072877311448985778912328039920985702400000000, 57407133808466068909935603919034842592418201600000000, 118641409870829875747200248099338674690997616640000000, 241109961995557489421729536459946338888156446720000000, 482219923991114978843459072919892677776312893440000000, 949827123012802231055298173933121941074555699200000000, 1843782062318969036754402337634883767968255180800000000, 3529525662153455013215570189186777498682088488960000000, 6666881806289859469407188135130579719732833812480000000, 12432833638756764956462053549297567585447717109760000000, 22902588281920356498745888117127098183719478886400000000, 41694455590162700292588668110667281308822641049600000000, 75050020062292860526659602599201106355880753889280000000, 133625645476765337035271975359553189365348659363840000000, 235435661078110355728812528014450857453233352212480000000, 410643594903680853015370688397298007185872125952000000000, 709293482106357837026549370868060194230142763008000000000, 1213679958270878965578762256818680776793799838924800000000, 2057979059676707811198770783301241317172095379046400000000, 3459156291797019512440487061293575830991394360524800000000, 5765260486328365854067478435489293051652323934208000000000, 9530328559032604779172770474992504840486494666752000000000])
end

if test_lagrange
    # Test lagrange
    println(lagrange([1//1,2,3],8)==[9//1,10//1,11//1])
    println(lagrange([0//1, 127, 2186, 16383, 78124, 279935, 823542, 2097151],10)==[19487170//1,  35831807//1,  62748516//1,  105413503//1,  170859374//1,  268435455//1,  410338672//1,  612220031//1])
end