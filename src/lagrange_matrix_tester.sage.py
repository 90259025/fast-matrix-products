

# This file was *autogenerated* from the file lagrange_matrix_tester.sage
from sage.all_cmdline import *   # import sage library

_sage_const_64 = Integer(64); _sage_const_10 = Integer(10); _sage_const_1 = Integer(1); _sage_const_3 = Integer(3); _sage_const_9 = Integer(9)
import random
mat_dim = _sage_const_64 
function_degree = _sage_const_10 

USE_BIG_INT = True

A_in = [_ for _ in range(function_degree+_sage_const_1 )]
A_out =  [_ for _ in range(_sage_const_3 *(function_degree+_sage_const_1 ))]
for _ in range(function_degree+_sage_const_1 ):
    A_in[_] = list(matrix.identity(mat_dim))
for _ in range(_sage_const_3 *(function_degree+_sage_const_1 )):
    A_out[_] = list(matrix.identity(mat_dim))

R = ZZ['x']; (x,) = R._first_ngens(1)

for i in range(mat_dim):
    for j in range(mat_dim):
        f = sum([random.randint(-_sage_const_10 ,_sage_const_9 )*x**i for i in range(function_degree+_sage_const_1 )])
        for ind in range(function_degree+_sage_const_1 ):
            A_in[ind][i][j] = f(ind)
        for ind in range(_sage_const_3 *(function_degree+_sage_const_1 )):
            A_out[ind][i][j] = f(ind+function_degree+_sage_const_1 )
A_in = [matrix(_) for _ in A_in]
A_out = [matrix(_) for _ in A_out]

printstr =""
s = "["
for ind in range((function_degree+_sage_const_1 )):
    line_str = "["
    for i in range(mat_dim):
        for j in range(mat_dim):
            line_str += str(A_in[ind][i][j])
            if j != mat_dim-_sage_const_1 :
                line_str += " "
            elif i != mat_dim-_sage_const_1 :
                line_str += "; "
            else:
                line_str += "], "
    s += line_str
s += "]"
s = s.replace("], ]","]]")
printstr += "println(lagrange_matrix(" + s + ") == "

s = "["
for ind in range(_sage_const_3 *(function_degree+_sage_const_1 )):
    line_str = ""
    for i in range(mat_dim):
        for j in range(mat_dim):
            line_str += str(A_out[ind][i][j])
            if j != mat_dim-_sage_const_1 :
                line_str += " "
            elif i != mat_dim-_sage_const_1 :
                line_str += "; "
            else:
                line_str += " ;;; "
    s += line_str
s += "]"
s = s.replace("], ]","]")

printstr += s+")"
printstr = printstr.replace('[[','[').replace(']])','])').replace('], [',' ;;; ').replace(']]','').replace('],','').replace(' ;;; ]',']')

if not USE_BIG_INT:
    print(printstr)

else:
# optional BigInt conversion

# if you're doing this in a sage notebook open up 'jupyter_notebook_config.py' and add the line
# c.NotebookApp.iopub_data_rate_limit = 10000000

    printstr = printstr.replace('([','(BigInt.([').replace('== [',') == BigInt.([')
    printstr += ')'
    print(printstr)

